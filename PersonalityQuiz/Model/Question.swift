//
//  Question.swift
//  PersonalityQuiz
//
//  Created by –ò–≥–æ—Ä—å –°—ã—Å–æ–µ–≤ on 31.08.2021.
//

struct Question {
    let titel: String
    let answer: [Answer]
    let type: ResponseType
    
    static func getQuestions() -> [Question] {
        [
            Question(
                titel: "–ö–∞–∫—É—é –ø–∏—â—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
             answer: [
                Answer(titel: "–°—Ç–µ–π–∫",animal: .dog),
                Answer(titel: "–ú–æ–ª–æ–∫–æ",animal: .cat),
                Answer(titel: "–ú–æ—Ä–∫–æ–≤—å",animal: .rabbit),
                Answer(titel: "–ö—É–∫—É—Ä—É–∑—É",animal: .turtle)
             ],
             type: ResponseType.single),
            Question(
                titel: "–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ?",
             answer: [
                Answer(titel: "–ü–ª–∞–≤–∞—Ç—å",animal: .dog),
                Answer(titel: "–°–ø–∞—Ç—å",animal: .cat),
                Answer(titel: "–ë–µ–≥–∞—Ç—å",animal: .rabbit),
                Answer(titel: "–ï—Å—Ç—å",animal: .turtle)
             ],
                type: ResponseType.multiple),
            Question(
                titel: "–í—ã –ª—é–±–∏—Ç–µ –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ –º–∞—à–∏–Ω–µ?",
             answer: [
                Answer(titel: "–ù–µ–Ω–∞–≤–∏–∂—É",animal: .cat),
                Answer(titel: "–ù–µ –∑–∞–º–µ—á–∞—é",animal: .turtle),
                Answer(titel: "–ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã",animal: .rabbit),
                Answer(titel: "–û–±–æ–∂–∞—é",animal: .dog)
             ],
                type: ResponseType.range)
        ]
    }
}


struct Answer {
    let titel: String
    let animal: Animal
}

enum ResponseType {
    case single
    case multiple
    case range
}

enum Animal: Character {
    case dog = "üê∂"
    case cat = "üê±"
    case rabbit = "üê∞"
    case turtle = "üê¢"
    
    var definition: String {
        switch self {
        case .dog:
            return "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±—ã—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏. –í—ã –æ–∫—Ä—É–∂–∞–µ—Ç–µ —Å–µ–±—è –ª—é–¥—å–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å."
        case .cat:
            return "–í—ã —Å–µ–±–µ –Ω–∞ —É–º–µ. –õ—é–±–∏—Ç–µ –≥—É–ª—è—Ç—å —Å–∞–º–∏ –ø–æ —Å–µ–±–µ. –í—ã —Ü–µ–Ω–∏—Ç–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ."
        case .rabbit:
            return "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –≤—Å–µ –º—è–≥–∫–æ–µ. –í—ã –∑–¥–æ—Ä–æ–≤—ã –∏ –ø–æ–ª–Ω—ã —ç–Ω–µ—Ä–≥–∏–∏."
        case .turtle:
            return "–í–∞—à–∞ —Å–∏–ª–∞ - –≤ –º—É–¥—Ä–æ—Å—Ç–∏. –ú–µ–¥–ª–µ–Ω–Ω—ã–π –∏ –≤–¥—É–º—á–∏–≤—ã–π –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞ –±–æ–ª—å—à–∏—Ö –¥–∏—Å—Ç–∞–Ω—Ü–∏—è—Ö."
        }
    }
    
}
